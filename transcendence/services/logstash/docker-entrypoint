#!/bin/bash -e

# Map environment variables to entries in logstash.yml.
# Note that this will mutate logstash.yml in place if any such settings are found.
# This may be undesirable, especially if logstash.yml is bind-mounted from the
# host system.
env2yaml /usr/share/logstash/config/logstash.yml

LOGSTASH_TOKEN=$(cat /run/secrets/logstash-token)

# Create logstash keystore and store value of ELASTIC_PASSWORD in keystore
# We can reference this value through its key in its configuration files (except pipelines.yml apparently)
echo y | bin/logstash-keystore create
curl --cacert /etc/ssl/certs/ca.crt -H "X-Vault-Token: $LOGSTASH_TOKEN" $VAULT_ADDR/v1/kv/elastic-creds \
	| jq . | grep "elastic-password" | tr -d '"' | awk '{print $2}' | bin/logstash-keystore add ELASTIC_PASSWORD
echo ">>> elastic-password added to keystore."

if [[ -n "$LOG_STYLE" ]]; then
  case "$LOG_STYLE" in
    console)
      # This is the default. Nothing to do.
      ;;
    file)
      # Overwrite the default config with the stack config. Do this as a
      # copy, not a move, in case the container is restarted.
      cp -f /usr/share/logstash/config/log4j2.file.properties /usr/share/logstash/config/log4j2.properties
      ;;
    *)
      echo "ERROR: LOG_STYLE set to [$LOG_STYLE]. Expected [console] or [file]" >&2
      exit 1 ;;
  esac
fi

export LS_JAVA_OPTS="-Dls.cgroup.cpuacct.path.override=/ -Dls.cgroup.cpu.path.override=/ $LS_JAVA_OPTS"

if [[ -z $1 ]] || [[ ${1:0:1} == '-' ]] ; then
  exec logstash "$@"
else
  exec "$@"
fi
